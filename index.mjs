// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";var r=e,n=t.isPrimitive;var i=function(e,t,i){var o,s;if(!r(e))throw new TypeError(format("invalid argument. First argument must be a function. Value: `%s`.",e));if(arguments.length<2)s=null;else if(arguments.length>2){if(o=i,!n(s=t))throw new TypeError(format("invalid argument. Arity argument must be a positive integer. Value: `%s`.",s))}else n(t)?s=t:(s=null,o=t);return u;function u(){var t,n;if(t=e,s){if(s>arguments.length)throw new Error(format("insufficient input arguments. Expected %u argument(s) and only received %u argument(s).",s,arguments.length));for(n=s-1;n>=0;n--){if(!r(t))throw new Error(format("invalid invocation. The configured arity exceeds the number of possible curried function invocations. Expected: %u. Actual: %u.",s,n));t=t.call(o,arguments[n])}return t}for(n=arguments.length-1;n>=0;n--){if(!r(t))throw new Error(format("invalid invocation. Number of arguments exceeds the number of possible curried function invocations. Expected: %u. Actual: %u.",arguments.length,n));t=t.call(o,arguments[n])}return t}};export{i as default};
//# sourceMappingURL=index.mjs.map
