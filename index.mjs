// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.1.1-esm/index.mjs";import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function r(r,i,s){var o,u;if(!e(r))throw new TypeError(n("invalid argument. First argument must be a function. Value: `%s`.",r));if(arguments.length<2)u=null;else if(arguments.length>2){if(o=s,!t(u=i))throw new TypeError(n("invalid argument. Arity argument must be a positive integer. Value: `%s`.",u))}else t(i)?u=i:(u=null,o=i);return l;function l(){var t,i;if(t=r,u){if(u>arguments.length)throw new Error(n("insufficient arguments. Expected %u argument(s) and only received %u argument(s).",u,arguments.length));for(i=u-1;i>=0;i--){if(!e(t))throw new Error(n("invalid invocation. The configured arity exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.",u,i));t=t.call(o,arguments[i])}return t}for(i=arguments.length-1;i>=0;i--){if(!e(t))throw new Error(n("invalid invocation. Number of arguments exceeds the number of possible curried function invocations. Expected: `%u`. Actual: `%u`.",arguments.length,i));t=t.call(o,arguments[i])}return t}}export{r as default};
//# sourceMappingURL=index.mjs.map
